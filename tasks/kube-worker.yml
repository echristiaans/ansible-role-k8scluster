---
- name: check if the Kubernetes binaries are already there
  stat:
    path: /usr/local/bin/kube-proxy
  register: stat_kube

- name: check if the cni binaries are already there
  stat:
    path: /opt/cni/bin/portmap
  register: stat_cni

- name: check if the containerd binaries are already there
  stat:
    path: /usr/local/bin/containerd
  register: stat_containerd

- name: install the dependencies
  apt:
    name: "{{ item }}"
    update_cache: yes
    state: present
  with_items:
    - socat

- name: create the required Kubernetes directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /var/lib/kubernetes
    - /var/run/kubernetes
    - /var/lib/kube-proxy
    - /var/lib/kubelet
    - /opt/cni/bin
    - /etc/cni/net.d

- name: download the Kubernetes worker binaries
  get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/v{{ kubeversion }}/bin/linux/amd64/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    mode: 0755
    validate_certs: no
  with_items:
    - kube-proxy
    - kubelet
  when: not stat_kube.stat.exists

- name: download the cni worker binaries
  unarchive:
    src: https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz
    dest: /opt/cni/bin
    remote_src: yes
    mode: 0755
    validate_certs: no
  when: not stat_cni.stat.exists

- name: download the containerd worker binaries
  unarchive:
    src: https://github.com/containerd/cri-containerd/releases/download/v1.0.0-beta.1/cri-containerd-1.0.0-beta.1.linux-amd64.tar.gz
    dest: /
    remote_src: yes
    validate_certs: no
  when: not stat_containerd.stat.exists

- name: copy the CNI networking config files
  template:
    src: "{{ item }}.j2"
    dest: "/etc/cni/net.d/{{ item }}"
    mode: 0644
  with_items:
    - 10-bridge.conf
    - 99-loopback.conf

- name: copy the worker kubelet certificates
  copy:
    src: "/etc/ssl/private/{{ item }}"
    dest: /var/lib/kubelet
    remote_src: true
  with_items:
    - {{ ansible_nodename }}-key.pem
    - {{ ansible_nodename }}.pem

- name: copy the kubelet config
  copy:
    src: "/tmp/{{ ansible_nodename }}.kubeconfig"
    dest: /var/lib/kubelet/kubeconfig
    remote_src: true

- name: copy the kube-proxy config
  copy:
    src: /tmp/kube-proxy.kubeconfig
    dest: /var/lib/kubelet/kubeconfig
    remote_src: true

- name: copy the CA certificate
  copy:
    src: /etc/ssl/private/ca.pem
    dest: /var/lib/kubernetes
    remote_src: true

- name: copy the Kubernetes worker service file
  template:
    src: "{{ item }}.j2"
    dest: "/etc/systemd/system/{{ item }}"
    mode: 0644
  with_items:
    - kube-proxy.service
    - kubelet.service

- name: start and enable Kubernetes Worker services
  systemd:
    state: started
    enabled: yes
    daemon_reload: yes
    name: "{{ item }}"
  with_items:
    - kube-proxy
    - kubelet
    - containerd
    - cri-containerd
